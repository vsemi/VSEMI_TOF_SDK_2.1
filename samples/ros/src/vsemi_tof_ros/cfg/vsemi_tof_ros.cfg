#!/usr/bin/env python

PACKAGE = "vsemi_tof_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

image_type_enum = gen.enum([ gen.const("Distance_only",  int_t, 0, "Distance Only"),
                             gen.const("Distance_and_Grayscale", int_t, 1, "Distance and Grayscale"),
                             gen.const("Distance_and_Amplitude", int_t, 2, "Distance and Amplitude")
                             ], "An enum to set image type")

hdr_enum        = gen.enum([ gen.const("HDR_off", int_t, 0, "HDR off"),
                            gen.const("HDR_spatial", int_t, 1, "HDR spatial"),
                             gen.const("HDR_temporal", int_t, 2, "HDR temporal")
                           ], "An enum to set HDR modes")

######  Name                          Type   Reconfiguration level  Description     Default Min  Max
gen.add("image_type",            int_t,     0,  "Image type",  0, 0, 2, edit_method = image_type_enum)

gen.add("hdr",                        int_t,       0,  "HDR mode", 0, 0, 2, edit_method = hdr_enum)

gen.add("automatic_integration_time", bool_t,      0,  "Automatic integration time",  False)

gen.add("integration_time_0",         int_t,       0,  "Integration time TOF for beam A [uS]",       800, 0, 1000)
gen.add("integration_time_1",         int_t,       0,  "Integration time TOF for beam A [uS]",       200, 0, 1000)
gen.add("integration_time_2",         int_t,       0,  "Integration time TOF for beam A [uS]",         0, 0, 1000)
gen.add("integration_time_3",         int_t,       0,  "Integration time TOF for beam A [uS]",         0, 0, 1000)
gen.add("integration_time_4",         int_t,       0,  "Integration time TOF for beam B [uS]",         0, 0, 1000)
gen.add("integration_time_5",         int_t,       0,  "Integration time TOF for beam B [uS]",         0, 0, 1000)

gen.add("integration_time_gray",      int_t,       0,  "Integration time Grayscale [uS]",           5000, 0, 50000)

gen.add("min_amplitude_0",            int_t,       0,  "threshold minAmplitude 0 beam A LSB",         60, 0, 2047)
gen.add("min_amplitude_1",            int_t,       0,  "threshold minAmplitude 1 beam A LSB",        100, 0, 2047)
gen.add("min_amplitude_2",            int_t,       0,  "threshold minAmplitude 2 beam A LSB",          0, 0, 2047)
gen.add("min_amplitude_3",            int_t,       0,  "threshold minAmplitude 3 beam A LSB",          0, 0, 2047)
gen.add("min_amplitude_4",            int_t,       0,  "threshold minAmplitude 4 beam B LSB",          0, 0, 2047)
gen.add("min_amplitude_5",            int_t,       0,  "threshold minAmplitude 5 beam B LSB",          0, 0, 2047)

gen.add("dcs_filter",                 bool_t,      0,  "DCS filter",  False)

gen.add("range",                      int_t,       0,  "Range",  7500, 1000,   9000)

exit(gen.generate(PACKAGE, "tof_cam_node", "vsemi_tof_ros"))
